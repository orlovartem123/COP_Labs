***Описание***
Описание структуры проекта, более детально каждый класс описан непосредственно в коде

Все решение состоит из одного проекта WinForms(.Net Framework 4.7.2)
Папка Database - содержит всю бизнес логику приложения
	Helpers - папка содержащая вспомогательные классы для работы с перечислениями
	Models - папка с моделя для базы данных (справочники и документы)
	Storages - папка с классами-хранилищами (просто содержат методы по сохранению чтению удалению редактированию всех сущностей в базе данных)
	ViewModels - папка с классом необходимым для корректного отображения документа на форме
	ExamDbContext - класс-соединение с базой данных

Папка Migrations - ее трогать не нужно, создается автоматически после первой команды Add-Migration

+формочки для различных действий (понятно по их названию)

***Как запустить***
1) Переименовать на FormMain все вкладки по варианту и во всех остальных формах поменять текст на labels

Spravochnik1-справочник который идет первый в задании
Spravochnik1-справочник который идет второй в задании
Document1-документ который идет первый в задании

2)Необходимо зайти в папку Database - Models и поменять поля у всех сущностей (Справочники и документы) согласно варианту (если есть перечисления по типу мужчина или женщина)
смотреть по аналогии с реализованным перечислением Gender или TypePriema

После того как исправлены все поля на свои согласно варианту, нужно по всему проекту исправить ошибки связанные с только что внесенными изменениями,
работу с перечеслиниями и связанными сущностями смотреть по аналогии на формочках,

после того как ошибок больше нету нужно зайти в Средства - Диспетчер пакетов Nuget - консоль диспетчера пакетов
в открывшейся консоле ввести команду "Add-Migration InitialCreate2" если команда прошла, то затем ввести команду Update-Database (внимательно посмотерть как реализуются связи с другими таблицами в примере)
если предыдущий шаг не работает то нужно понять каким образом можно подключиться к sql server на пк, для этого зайти в management studio и попробовать зайти,
	если удалось зайти, то нужно отключиться (нажать на вилку с крестиком вроде) и посмотреть каким образом был осуществлен вход
	нужно посмотреть как называется имя сервера, скопировать его, зайти в класс Database - ExamDbContext и поменять там значение переменной DataSource на то что скопировали
		если при входе использовались логин и пароль, то нужно их узнать (скорее всего у препода), затем опять зайти в ExamDbContext и поменять значение переменных UserId и Password на то что вводилось при входе в management studio, затем закоментировать
		строку optionsBuilder.UseSqlServer($"Data Source={DataSource};Initial Catalog=VLizaExamDb;Integrated Security=True;MultipleActiveResultSets=True;"); и раскоментировать строку
		optionsBuilder.UseSqlServer($@"Data Source={DataSource};Initial Catalog=VLizaExamDb;Persist Security Info=False;User ID={UserId};Password={Password};MultipleActiveResultSets=True;TrustServerCertificate=True;Connection Timeout=30;");
		и опять пробовать выполнить команду в диспетчере пакетов Update-Database, если это все не помогает можно попробовать использовать 3ю строку подключения (она к постресу) постараться допереть что там надо менять чтобы была правильная строка подключения(но лучше просто сказать преподу что хз как к бд подключиться)\
если Update-Database все таки прошла, то можно по идее попробовать запустить и поделать что нибудь (не забываем на формочках подогнать все элементы под свой вариант))

если где то накосячила и вообще хз что делать, лучше просто скачай по новой проект и начни заново 			 